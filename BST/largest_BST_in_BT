struct info{
    int maxi, mini;
    bool isBST;
    int size;
};

info solve(TreeNode<int>* root, int &maxSize){
    if(!root)
        return {INT_MIN, INT_MAX, true, 0};

    info left = solve(root->left, maxSize);
    info right = solve(root->right, maxSize);

    info curr;

    curr.maxi = max(root->data, right.maxi);
    curr.mini = min(root->data, left.mini);
    curr.size = left.size + right.size + 1;

    if(left.isBST && right.isBST && (root->data > left.maxi && root->data < right.mini))
        curr.isBST = true;

    else curr.isBST = false;

    //update maxSize
    if(curr.isBST)
        maxSize = max(maxSize, curr.size);

    return curr;
}

int largestBST(TreeNode<int>* root) 
{
    // Write your code here.
    int maxSize = 0;
    info temp = solve(root, maxSize);
    return maxSize;
}