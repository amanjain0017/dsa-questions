//using queue
vector<long long> printFirstNegativeInteger(long long int A[],
                                             long long int N, long long int K) {
                                                 
        
        queue<long long int> q;
        vector<long long int> ans;
        
        //process first window
        for(int i =0; i<K; i++){
            if (A[i] < 0)
                q.push(i);
        }
        //storing ans
        if(q.size()>0)
            ans.push_back(A[q.front()]);
        
        else ans.push_back(0);
        
        
        //processing remaining windows
        for(int i = K; i<N; i++){
            //removal
            if(!q.empty() && i-q.front()>=K)
                q.pop();
            //addition
            if (A[i] < 0)
                q.push(i);
                
            //storing ans
            if(q.size()>0)
                ans.push_back(A[q.front()]);
        
            else ans.push_back(0);
        }
        
        return ans;
    
 }