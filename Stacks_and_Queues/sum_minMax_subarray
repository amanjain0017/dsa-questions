int solve(int n, int k, int *arr){
    deque<int> maxi;
    deque<int> mini;

    //process first window
    for(int i=0 ; i<k; i++){
        while(!maxi.empty() && arr[maxi.back()]<=arr[i] )
            maxi.pop_back();
        while(!mini.empty() && arr[mini.back()]>=arr[i] )
            mini.pop_back();
        
        maxi.push_back(i);
        mini.push_back(i);
    }
    int sum = 0;
    sum += arr[maxi.front()] + arr[mini.front()];


    //process next windows
    for(int i = k; i<n; i++){
        //remove
        while(!maxi.empty() && i-maxi.front()>=k)
            maxi.pop_front();
        while(!mini.empty() && i-mini.front()>=k)
            mini.pop_front();

        //add
        while(!maxi.empty() && arr[maxi.back()]<=arr[i] )
            maxi.pop_back();
        while(!mini.empty() && arr[mini.back()]>=arr[i] )
            mini.pop_back();
        
        maxi.push_back(i);
        mini.push_back(i);

        //store ans
        sum += arr[maxi.front()] + arr[mini.front()];
    }

    return sum;
}
