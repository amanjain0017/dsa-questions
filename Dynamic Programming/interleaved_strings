class Solution{
  public:
    /*You are required to complete this method */
    bool solve(string A, string B, string C, int n, int m, int len, vector<vector<int>> &dp){
        
        if(len == 0)    return true;
        
        if(dp[n][m]!=-1)    return dp[n][m];
        
        int a = 0, b= 0;
        
        if(n-1>=0 and A[n-1]==C[len-1])     a = solve(A, B, C, n-1, m, len-1, dp);
        if(m-1>=0 and B[m-1]==C[len-1])     b = solve(A, B, C, n, m-1, len-1, dp);
        
        return dp[n][m] = a or b;
    }
    
    bool isInterleave(string A, string B, string C) 
    {
        //Your code here
        int n = A.size();
        int m = B.size();
        int len = C.size();
        
        if(n+m != len)  return false;
        
        vector<vector<int>> dp(n+1, vector<int> (m+1, -1));
        return solve(A, B, C, n, m, len, dp);
    }

};