class Solution {
public:
    int mod = 1e9 + 7;

    long long int solve(int h , vector<int> &dp){
        if(h == 1 || h == 0)
            return 1;

        if(dp[h] != -1) return dp[h];

        return dp[h] = (solve(h - 1, dp) % mod * (2 * solve(h - 2, dp) % mod + solve(h - 1, dp) % mod) % mod) % mod;
    }

    long long int countBT(int h) {
        // code here
        vector<int> dp(h + 1, -1);
        return solve(h, dp);
    }
};


//bottom up
class Solution {
  public:
    long long int countBT(int h) { 
        vector<long long int>dp(h+1,0);
        long long int mod=1e9+7;
        dp[0]=1;
        dp[1]=1;
        for(int i=2;i<=h;i++){
            dp[i]=((dp[i-1]*dp[i-1])%mod+(dp[i-1]*dp[i-2])%mod+(dp[i-2]*dp[i-1])%mod)%mod;
        }
        return dp[h]%mod;
    }
};