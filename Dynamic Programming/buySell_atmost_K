class Solution {
  public:
  
    int solve(int A[], int &N, int index, int buy, vector<vector<vector<int>> > &dp, int limit){
        if(index == N)  return 0;
        if(limit == 0)  return 0;
        
        if(dp[index][buy][limit]!=-1)   return dp[index][buy][limit];
        
        int profit = 0;
        
        if(buy){
            int buyIt = -A[index] + solve(A, N, index + 1, 0, dp, limit);
            int ignore = 0 + solve(A, N, index + 1, 1, dp, limit);
            
            profit = max(buyIt, ignore);
        }
        else{
            int sell = A[index] + solve(A, N, index + 1, 1, dp, limit-1);
            int ignore = 0 + solve(A, N, index + 1, 0, dp, limit);
            
            profit = max(sell , ignore);
        }
        
        return dp[index][buy][limit] = profit;
    }
  
    int maxProfit(int K, int N, int A[]) {
        // code here
        
        vector<vector<vector<int>> > dp(N, vector<vector<int>> (2, vector<int> (K + 1, -1)));
        return solve( A, N, 0, 1, dp, K);
    }
};