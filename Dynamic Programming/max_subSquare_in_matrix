    int solve( vector<vector<int>> &mat, int n, int m , int i, int j, vector<vector<int>> &dp, int &maxi){
        if(i>=n || j>=m)    return 0;
        
        if(dp[i][j]!=-1)    return dp[i][j];
        
        int right = solve(mat, n, m, i, j+1, dp, maxi);
        int diag = solve(mat, n, m, i+1, j+1, dp, maxi);
        int down = solve(mat, n, m, i+1, j, dp, maxi);
        
        if(mat[i][j]==1){
            int ans = 1 + min({down, right, diag});
            maxi = max(maxi, ans);
            return dp[i][j] = ans;
        }
        else{
            return dp[i][j] = 0;
        }
    }

    int maxSquare(int n, int m, vector<vector<int>> mat){
        // code here
        vector<vector<int>> dp(n, vector<int>(m, -1));
        
        int maxi = 0;
        int x = solve(mat, n, m, 0, 0, dp, maxi);
        return maxi;
        
    }