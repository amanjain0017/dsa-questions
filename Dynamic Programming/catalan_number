unsigned long int catalan(unsigned int n)
{
    // Base case
    if (n <= 1)
        return 1;
 
    // catalan(n) is sum of
    // catalan(i)*catalan(n-i-1)
    unsigned long int res = 0;
    for (int i = 0; i < n; i++)
        res += catalan(i) * catalan(n - i - 1);
 
    return res;
}

//dp
class Solution
{
    public:
    //Function to find the nth catalan number.
    int mod = 1e9 + 7;
    int findCatalan(int n) 
    {
        //code here
        vector<int> catalan(n+1, 0);
        
        catalan[0] = catalan[1] = 1;
        
        for(int i = 2; i <= n; i++){
            for(int j = 0; j < i; j++){
                catalan[i] = (catalan[i] + 1LL * catalan[j] * catalan[i-1-j]) % mod;
            }
        }
        
        return catalan[n];
    }
};