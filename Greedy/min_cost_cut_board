class Solution {
public:
    int minimumCostOfBreaking(vector<int> X, vector<int> Y, int M, int N){
        sort(X.begin(), X.end(), greater<int>());
        sort(Y.begin(), Y.end(), greater<int>());
        
        int res = 0;
        
        int hori = 1, verti = 1;
        int i = 0, j = 0;
        
        while(i<M-1 and j<N-1){
            if(X[i]>Y[j]){
                res += X[i] * verti;
                hori++;
                i++;
            }
            else{
                res += Y[j] * hori;
                verti++;
                j++;
            }
        }
        
        while(i<M-1){
            res += X[i] * verti;
            i++;
        }
        
        while(j<N-1){
            res += Y[j] * hori;
            j++;
        }
        
        return res;
    }
};