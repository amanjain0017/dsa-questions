Node* merge(Node* first, Node* second) {
    if (!first) return second;
    if (!second) return first;

    Node* newHead = new Node(-1);
    Node* temp = newHead;

    while (first && second) {
        if (first->data < second->data) {
            temp->bottom = first;
            temp = first;
            first = first->bottom;
        } else {
            temp->bottom = second;
            temp = second;
            second = second->bottom;
        }
    }

    if (first) {
        temp->bottom = first;
    }

    if (second) {
        temp->bottom = second;
    }

    return newHead->bottom;
}

Node *flatten(Node *root)
{
   // Your code here
   if(!root or !root->next)    return root;
   
   Node * first = root;
   Node * second = flatten(root->next);

   first->next = NULL;
   
   Node * ans = merge(first, second);
   return ans;
}