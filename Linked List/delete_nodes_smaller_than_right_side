class Solution
{
    public:
    
    Node* reverse(Node * head){
        if(!head)   return NULL;
        
        Node * curr = head, *prev = NULL;
        
        while(curr){
            Node* next = curr->next;
            curr->next = prev;
            prev = curr;
            curr =next;
        }
        
        return prev;
    }
    
    Node *compute(Node *head)
    {
        // your code goes here
        head = reverse(head);
        
        Node * curr = head->next;
        Node * prev = head;
        
        int maxi = head->data;
        
        while(curr){
            if(curr->data < maxi){
                prev->next = curr->next;
                curr = prev->next;
            }
            else{
                maxi = curr->data;
                prev = curr;
                curr = curr->next;
            }
        }
        
        return reverse(head);
        
    }
    
};



//recursive
class Solution
{
    Node compute(Node head)
    {
        if( head.next == null) {
            return head;
        }

        head.next = compute(head.next);
        if (head.data < head.next.data){
            return head.next;
        }
        
        return head;
    }
}