//union
class Solution{
    public:
    //Function to return the count of number of elements in union of two arrays.
    int doUnion(int a[], int n, int b[], int m)  {
              
        unordered_set<int> st;
        
        for(int i = 0 ; i < n ; i++){
            
           st.insert(a[i]);
        }
        
        for(int i = 0 ; i < m ; i++){
            
            st.insert(b[i]);
        }
        
        return st.size();
        
    
    }
};


//intersection
class Solution {
  public:
    // Function to return the count of the number of elements in
    // the intersection of two arrays.
    int NumberofElementsInIntersection(int a[], int b[], int n, int m) {
        // Your code goes here
        unordered_map<int, int> mpp;
        
        for(int i =0; i<n; i++){
            mpp[a[i]]++;
        }

        int count = 0;        
        for(int i =0; i<m; i++){
            
            int num = b[i];
            
            if(mpp.count(num) > 0){
                                
                mpp.erase(num);
                count++;

            }
        }
        
        return count;
    }
};