class Solution{   
public:
    int minimumNumberOfSwaps(string S){
        // code here 
        int swaps = 0;
        int open = 0, close = 0, fault = 0;
        
        for(int i = 0; i<S.size(); i++){
            if(S[i] == ']'){
                close++;
                fault = close - open;
            }
            else{ // [
                open++;
                if(fault > 0){
                    swaps += fault;
                    fault--;
                }
                
            }
        }
        
        
        return swaps;
    }
};


//using a vector
class Solution{   
public:
    int minimumNumberOfSwaps(string S){
        // code here 
        int swaps = 0;
        vector<int> v;
        
        for(int i = 0; i<S.size(); i++){
            if(S[i] == '[')
                v.push_back(i);
        }
        
        int idx = 0;
        int count = 0;
        
        for(int i = 0; i<S.size(); i++){
            if(S[i] == '['){
                count++;
                idx++;
            }
            else{ // ']'
                count--;
                if(count<0){                    //unbalanced
                    swaps += v[idx] - i;
                    swap(S[i], S[v[idx]]);
                    idx++;
                    count = 1;
                }
            }
        }
        
        
        return swaps;
    }