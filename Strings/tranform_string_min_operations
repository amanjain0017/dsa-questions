class Solution
{
    public:
    int transform (string A, string B)
    {
        //code here.
        if (A.length() != B.length()) {
            return -1;
        }
        unordered_map<char, int> m;
        
        for(int i = 0; i<A.size(); i++){
            m[A[i]]++;
        }
        
        for(int i = 0; i<B.size(); i++){
            if(m.count(B[i]))
                m[B[i]]--;
        }
        
        for(auto i: m){
            if(i.second!=0)
                return -1;
        }
        
        int i = A.size()-1;
        int j = B.size()-1;
        int res = 0;
        
        while(i>=0 && j>=0){
            while(i>=0 && A[i]!=B[j]){
                res++;
                i--;
            }
            
            i--;
            j--;
        }
        
        return res;
        
    }
};