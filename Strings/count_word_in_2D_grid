class Solution{
    public:

    int solve(vector<vector<char> > &mat, string target, int index, int i, int j){
        
        int found = 0;
        
        if(i>=0 and j>=0 and i<mat.size() and j<mat[0].size() and target[index]==mat[i][j]){
            char temp = target[index];
            index++;
            
            mat[i][j] = 0;
            
            if(index==target.size()){
                found = 1;
            }
            
            else{
                found += solve(mat, target, index, i+1, j);
                found += solve(mat, target, index, i, j+1);
                found += solve(mat, target, index, i-1, j);
                found += solve(mat, target, index, i, j-1);
            }
            
            mat[i][j] = temp;  //backtrack
        }
        
        return found;
    }    
    
    int findOccurrence(vector<vector<char> > &mat, string target){
        
        int ans = 0;
        
        for(int i = 0; i<mat.size(); i++){
            for(int j = 0; j<mat[0].size(); j++){
                ans+=solve(mat, target, 0, i, j);
            }
        }
        
        return ans;
    }
};