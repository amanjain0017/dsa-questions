vector<vector<int>> getTreeTraversal(TreeNode *root){
    // Write your code here.
    vector<vector<int>> ans;
    vector<int> in, pre, post;

    if(!root)   return ans;

    stack<pair<TreeNode*, int>> s;
    s.push({root, 1});

    while(!s.empty()){
        auto it = s.top();
        s.pop();

        if(it.second == 1){
            pre.push_back(it.first->data);
            it.second++;
            s.push(it);

            if(it.first->left)  s.push({it.first->left, 1});
        }
        else if(it.second == 2){
            in.push_back(it.first->data);
            it.second++;
            s.push(it);

            if(it.first->right)  s.push({it.first->right, 1});
        }
        else{
            post.push_back(it.first->data);
        }
    }

    ans.push_back(in);
    ans.push_back(pre);
    ans.push_back(post);

    return ans;
}