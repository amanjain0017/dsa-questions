class Solution
{
public:
    
    pair<int, int> solve(Node* root){
        if(!root)   return {0,0};
        
        pair<int, int> left = solve(root->left);
        pair<int, int> right = solve(root->right);
        
        if(left.first > right.first)            return {left.first + 1, left.second + root->data};
        else if(left.first < right.first)       return {right.first + 1, right.second + root->data};
        
        else return {left.first + 1, root->data + max(left.second, right.second)};
    }
    
    int sumOfLongRootToLeafPath(Node *root)
    {
        //code here
        pair<int, int> ans = solve(root);
        
        return ans.second;
    }
};