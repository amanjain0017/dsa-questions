// brute force
int countTriplets(int arr[], int n, int sum)
{
    // Initialize result
    int ans = 0;

    // Fix the first element as A[i]
    for (int i = 0; i < n - 2; i++) {
        // Fix the second element as A[j]
        for (int j = i + 1; j < n - 1; j++) {
            // Now look for the third number
            for (int k = j + 1; k < n; k++)
                if (arr[i] + arr[j] + arr[k] < sum)
                    ans++;
        }
    }
    return ans;
}


// using 2 pounter approach
class Solution{
	
	
	public:
	long long countTriplets(long long arr[], int n, long long sum)
	{
	    // Your code goes here
	    long long count = 0;
	    sort(arr, arr+n);
	    
	    for(int i =0; i<n-2; i++){
	        int left = i+1;
	        int right = n-1;
	        
	        while(left<right){
	            int temp = arr[i] + arr[left] + arr[right];
	            
	            if(temp < sum){
	                count = count + (right - left);
	                left++;
	                
	            }
	            else if (temp>=sum){
	                right--;
	            }
	        }
	    }
	    
	    
	    return count;
	}
};