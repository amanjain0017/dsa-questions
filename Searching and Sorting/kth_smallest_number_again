vector<int> kthSmallest(vector<pair<int, int>> range, int n, vector<int> Q){
    sort(range.begin(), range.end());

    //merge intervals
    int idx = 0;

    for(int i = 0; i<nl i++){
        if(range[idx].second >= range[i].first){
            range[idx].second = max( range[idx].second, range[i].second);
        }

        else{
            idx++;
            range[idx] = range[i];
        }
    }

    vector<int> ans;

    for(int i = 0; i<Q.size(); i++){
        
        for(int j= 0; i<=idx; j++){
            if( (range[j].second - range[j].first + 1) >= Q[i]){
                ans.push_back(range[j].first + Q[i] -1);
                break;
            }
            else{
                Q[i] = Q[i] - (range[j].second - range[j].first + 1);
            }
        }
    }

    return ans;
}