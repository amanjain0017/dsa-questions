bool isPossible(int n, int k, vector<int> &arr, int mid){
    int cows = 1;
    int pos = arr[0];
    
    for(int i = 0; i<n; i++){
        if(arr[i] - pos >=mid){
            cows++;
            
            if(cows == k)
                return true;
            
            pos = arr[i];
        }
    }
    
    return false;
}

class Solution {
public:

    int solve(int n, int k, vector<int> &stalls) {
    
        // Write your code here
        sort(stalls.begin(), stalls.end());
        
        int s = 0, e = stalls[n-1];
        int ans = -1;
        
        while(s<=e){
            int mid = s + (e-s)/2;
            
            if(isPossible(n , k ,stalls,  mid)){
                ans = mid;
                s = mid+1;
            }
            else{
                e = mid-1;
            }
        }
        
        return ans;
        
    }
};