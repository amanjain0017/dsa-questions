class Solution
{
    public:
    //Function to remove a loop in the linked list.
    Node *floyd(Node*head){
        
        if(head == NULL){
            return NULL;
        }
        Node *slow = head;
        Node *fast = head;
        
        while(slow !=NULL && fast !=NULL){
            fast = fast->next;
            if(fast !=NULL){
                fast = fast->next;
            }
            slow = slow->next;
            
            if(slow == fast){
                return slow;
            }
            
            
        }return NULL;
    }
    
    Node* startingNode(Node *head){
        if(head ==NULL){
            
            return NULL;
        }
        
        
        Node *fast = floyd(head);
        Node *slow = head;
        
        if(fast == NULL){
            return NULL;
        }
        else{
            while(slow !=fast){
                slow = slow->next;
                fast = fast->next;
            }
        }
        return slow;
        
    }
    
    
    
    void removeLoop(Node* head)
    {
        // code here
        // just remove the loop without losing any nodes
        
        Node *loopStarting = startingNode(head);
        if(loopStarting ==NULL){
            return;
        }
        Node *temp = loopStarting ->next;
        
        while(temp->next!=loopStarting){
            temp = temp->next;
        }
        
        temp->next = NULL;
        
        
        
        
    }
};